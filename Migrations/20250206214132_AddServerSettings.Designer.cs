// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MusicServer.Data;

#nullable disable

namespace audiarr.Migrations
{
    [DbContext(typeof(MusicDbContext))]
    [Migration("20250206214132_AddServerSettings")]
    partial class AddServerSettings
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.1");

            modelBuilder.Entity("MusicServer.Models.MusicTrack", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AlbumArtist")
                        .HasColumnType("TEXT");

                    b.Property<string>("AlbumName")
                        .HasColumnType("TEXT");

                    b.Property<string>("AlbumType")
                        .HasColumnType("TEXT");

                    b.Property<string>("Artist")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Bitrate")
                        .HasColumnType("INTEGER");

                    b.Property<TimeSpan?>("Duration")
                        .HasColumnType("TEXT");

                    b.Property<string>("FileFormat")
                        .HasColumnType("TEXT");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long?>("FileSize")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Genre")
                        .HasColumnType("TEXT");

                    b.Property<string>("MusicBrainzId")
                        .HasColumnType("TEXT");

                    b.Property<string>("ReleaseType")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ReleaseYear")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TrackNumber")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TrackTitle")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Artist");

                    b.HasIndex("FilePath");

                    b.HasIndex("Id");

                    b.HasIndex("AlbumName", "TrackNumber");

                    b.HasIndex("Artist", "AlbumName");

                    b.ToTable("MusicTracks");
                });

            modelBuilder.Entity("MusicServer.Models.ServerSettings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ServerName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ServerSettings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ServerName = "Audiarr"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
